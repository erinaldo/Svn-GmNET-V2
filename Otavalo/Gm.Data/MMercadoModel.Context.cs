//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gm.Entities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class gm_mmercadoEntities : DbContext
    {
        public gm_mmercadoEntities()
            : base("name=gm_mmercadoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cellar> Cellar { get; set; }
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<Credito> Credito { get; set; }
        public virtual DbSet<Factura> Factura { get; set; }
        public virtual DbSet<FacturaDetalle> FacturaDetalle { get; set; }
        public virtual DbSet<Grupo> Grupo { get; set; }
        public virtual DbSet<Kardex> Kardex { get; set; }
        public virtual DbSet<MedidaMetrica> MedidaMetrica { get; set; }
        public virtual DbSet<Modulos> Modulos { get; set; }
        public virtual DbSet<Parametros> Parametros { get; set; }
        public virtual DbSet<Terminal> Terminal { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }
        public virtual DbSet<Proveedor> Proveedor { get; set; }
        public virtual DbSet<VistaFacturaCompra> VistaFacturaCompra { get; set; }
        public virtual DbSet<VistaFacturaVenta> VistaFacturaVenta { get; set; }
        public virtual DbSet<VistaKardex> VistaKardex { get; set; }
        public virtual DbSet<VistaVenta> VistaVenta { get; set; }
        public virtual DbSet<Reservacion> Reservacion { get; set; }
        public virtual DbSet<Marca> Marca { get; set; }
        public virtual DbSet<Acceso> Acceso { get; set; }
        public virtual DbSet<KardexBodega> KardexBodega { get; set; }
        public virtual DbSet<Ubicacion> Ubicacion { get; set; }
        public virtual DbSet<Traslados> Traslados { get; set; }
        public virtual DbSet<Devolucion> Devolucion { get; set; }
        public virtual DbSet<Producto> Producto { get; set; }
    
        public virtual int p_ReinicioTablas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_ReinicioTablas");
        }
    
        public virtual ObjectResult<Sp_Existencia_Result> Sp_Existencia()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Existencia_Result>("Sp_Existencia");
        }
    
        public virtual int Sp_FacturaDetalleGrabar(Nullable<int> iDProducto, Nullable<decimal> costo, Nullable<int> unidades, Nullable<int> iDFactura, string tipo, Nullable<int> iva, Nullable<int> idMedida)
        {
            var iDProductoParameter = iDProducto.HasValue ?
                new ObjectParameter("IDProducto", iDProducto) :
                new ObjectParameter("IDProducto", typeof(int));
    
            var costoParameter = costo.HasValue ?
                new ObjectParameter("Costo", costo) :
                new ObjectParameter("Costo", typeof(decimal));
    
            var unidadesParameter = unidades.HasValue ?
                new ObjectParameter("Unidades", unidades) :
                new ObjectParameter("Unidades", typeof(int));
    
            var iDFacturaParameter = iDFactura.HasValue ?
                new ObjectParameter("IDFactura", iDFactura) :
                new ObjectParameter("IDFactura", typeof(int));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            var ivaParameter = iva.HasValue ?
                new ObjectParameter("Iva", iva) :
                new ObjectParameter("Iva", typeof(int));
    
            var idMedidaParameter = idMedida.HasValue ?
                new ObjectParameter("IdMedida", idMedida) :
                new ObjectParameter("IdMedida", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_FacturaDetalleGrabar", iDProductoParameter, costoParameter, unidadesParameter, iDFacturaParameter, tipoParameter, ivaParameter, idMedidaParameter);
        }
    
        public virtual int UpdateAcceso(Nullable<long> idUsuario, Nullable<long> iDModulo, Nullable<bool> estado)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(long));
    
            var iDModuloParameter = iDModulo.HasValue ?
                new ObjectParameter("IDModulo", iDModulo) :
                new ObjectParameter("IDModulo", typeof(long));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateAcceso", idUsuarioParameter, iDModuloParameter, estadoParameter);
        }
    
        public virtual int Sp_AjusteKardex(Nullable<int> idProducto)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_AjusteKardex", idProductoParameter);
        }
    
        public virtual ObjectResult<Sp_ResumenVentas_Result> Sp_ResumenVentas(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ResumenVentas_Result>("Sp_ResumenVentas", fechaParameter);
        }
    
        public virtual ObjectResult<Sp_ProcedureKardex_Result> Sp_ProcedureKardex()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ProcedureKardex_Result>("Sp_ProcedureKardex");
        }
    
        public virtual ObjectResult<Sp_MovimientoFactura_Result> Sp_MovimientoFactura()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_MovimientoFactura_Result>("Sp_MovimientoFactura");
        }
    }
}
